/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab_management_system;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;


/**
 *
 * @author DELL
 */
public class Allocated_computers extends javax.swing.JFrame {

    /**
     * Creates new form Allocated_computers
     */
    public Allocated_computers() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Change_Acc_pass = new javax.swing.JButton();
        add_class_stu_btn = new javax.swing.JButton();
        comp_19 = new javax.swing.JButton();
        comp_17 = new javax.swing.JButton();
        comp_16 = new javax.swing.JButton();
        comp_15 = new javax.swing.JButton();
        comp_14 = new javax.swing.JButton();
        comp_13 = new javax.swing.JButton();
        comp_12 = new javax.swing.JButton();
        comp_11 = new javax.swing.JButton();
        comp_20 = new javax.swing.JButton();
        comp_18 = new javax.swing.JButton();
        comp_21 = new javax.swing.JButton();
        comp_22 = new javax.swing.JButton();
        comp_23 = new javax.swing.JButton();
        comp_24 = new javax.swing.JButton();
        comp_25 = new javax.swing.JButton();
        comp_26 = new javax.swing.JButton();
        comp_27 = new javax.swing.JButton();
        comp_28 = new javax.swing.JButton();
        comp_29 = new javax.swing.JButton();
        comp_30 = new javax.swing.JButton();
        comp_31 = new javax.swing.JButton();
        comp_34 = new javax.swing.JButton();
        comp_33 = new javax.swing.JButton();
        comp_35 = new javax.swing.JButton();
        comp_32 = new javax.swing.JButton();
        comp_36 = new javax.swing.JButton();
        comp_5 = new javax.swing.JButton();
        comp_2 = new javax.swing.JButton();
        comp_4 = new javax.swing.JButton();
        comp_7 = new javax.swing.JButton();
        comp_6 = new javax.swing.JButton();
        comp_10 = new javax.swing.JButton();
        comp_8 = new javax.swing.JButton();
        comp_1 = new javax.swing.JButton();
        comp_9 = new javax.swing.JButton();
        comp_3 = new javax.swing.JButton();
        logout_btn = new javax.swing.JButton();
        end_session_btn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        Status_lb = new javax.swing.JLabel();
        Allocated_to_lb = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cb2 = new javax.swing.JCheckBox();
        cb3 = new javax.swing.JCheckBox();
        cb4 = new javax.swing.JCheckBox();
        cb6 = new javax.swing.JCheckBox();
        cb5 = new javax.swing.JCheckBox();
        cb1 = new javax.swing.JCheckBox();
        Edit_Btn = new javax.swing.JButton();
        Update_Btn = new javax.swing.JButton();
        comp_name_lb = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Activate_comp_btn = new javax.swing.JButton();
        Allocate_computers_Btn = new javax.swing.JButton();
        gen_rep_btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Allocated Computers");
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        Change_Acc_pass.setBackground(new java.awt.Color(0, 0, 0));
        Change_Acc_pass.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        Change_Acc_pass.setForeground(new java.awt.Color(255, 255, 255));
        Change_Acc_pass.setText("Change Account Password");
        Change_Acc_pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_Acc_passActionPerformed(evt);
            }
        });
        getContentPane().add(Change_Acc_pass);
        Change_Acc_pass.setBounds(1020, 10, 310, 30);

        add_class_stu_btn.setBackground(new java.awt.Color(0, 0, 0));
        add_class_stu_btn.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        add_class_stu_btn.setForeground(new java.awt.Color(255, 255, 255));
        add_class_stu_btn.setText("Add new Class/Student");
        add_class_stu_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_class_stu_btnActionPerformed(evt);
            }
        });
        getContentPane().add(add_class_stu_btn);
        add_class_stu_btn.setBounds(1030, 560, 310, 30);

        comp_19.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_19.setForeground(new java.awt.Color(255, 255, 255));
        comp_19.setText("comp_19");
        comp_19.setToolTipText("Click to know its details");
        comp_19.setBorder(null);
        comp_19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_19ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_19);
        comp_19.setBounds(550, 250, 140, 90);

        comp_17.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_17.setForeground(new java.awt.Color(255, 255, 255));
        comp_17.setText("comp_17");
        comp_17.setToolTipText("Click to know its details");
        comp_17.setBorder(null);
        comp_17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_17ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_17);
        comp_17.setBounds(270, 250, 140, 90);

        comp_16.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_16.setForeground(new java.awt.Color(255, 255, 255));
        comp_16.setText("comp_16");
        comp_16.setToolTipText("Click to know its details");
        comp_16.setBorder(null);
        comp_16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_16ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_16);
        comp_16.setBounds(140, 250, 130, 90);

        comp_15.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_15.setForeground(new java.awt.Color(255, 255, 255));
        comp_15.setText("comp_15");
        comp_15.setToolTipText("Click to know its details");
        comp_15.setBorder(null);
        comp_15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_15ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_15);
        comp_15.setBounds(10, 250, 130, 90);

        comp_14.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_14.setForeground(new java.awt.Color(255, 255, 255));
        comp_14.setText("comp_14");
        comp_14.setToolTipText("Click to know its details");
        comp_14.setBorder(null);
        comp_14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_14ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_14);
        comp_14.setBounds(830, 140, 140, 90);

        comp_13.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_13.setForeground(new java.awt.Color(255, 255, 255));
        comp_13.setText("comp_13");
        comp_13.setToolTipText("Click to know its details");
        comp_13.setBorder(null);
        comp_13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_13ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_13);
        comp_13.setBounds(690, 140, 140, 90);

        comp_12.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_12.setForeground(new java.awt.Color(255, 255, 255));
        comp_12.setText("comp_12");
        comp_12.setToolTipText("Click to know its details");
        comp_12.setBorder(null);
        comp_12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_12ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_12);
        comp_12.setBounds(550, 140, 140, 90);

        comp_11.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_11.setForeground(new java.awt.Color(255, 255, 255));
        comp_11.setText("comp_11");
        comp_11.setToolTipText("Click to know its details");
        comp_11.setBorder(null);
        comp_11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_11ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_11);
        comp_11.setBounds(410, 140, 140, 90);

        comp_20.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_20.setForeground(new java.awt.Color(255, 255, 255));
        comp_20.setText("comp_20");
        comp_20.setToolTipText("Click to know its details");
        comp_20.setBorder(null);
        comp_20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_20ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_20);
        comp_20.setBounds(690, 250, 140, 90);

        comp_18.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_18.setForeground(new java.awt.Color(255, 255, 255));
        comp_18.setText("comp_18");
        comp_18.setToolTipText("Click to know its details");
        comp_18.setBorder(null);
        comp_18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_18ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_18);
        comp_18.setBounds(410, 250, 140, 90);

        comp_21.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_21.setForeground(new java.awt.Color(255, 255, 255));
        comp_21.setText("comp_21");
        comp_21.setToolTipText("Click to know its details");
        comp_21.setBorder(null);
        comp_21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_21ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_21);
        comp_21.setBounds(830, 250, 140, 90);

        comp_22.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_22.setForeground(new java.awt.Color(255, 255, 255));
        comp_22.setText("comp_22");
        comp_22.setToolTipText("Click to know its details");
        comp_22.setBorder(null);
        comp_22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_22ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_22);
        comp_22.setBounds(10, 360, 130, 90);

        comp_23.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_23.setForeground(new java.awt.Color(255, 255, 255));
        comp_23.setText("comp_23");
        comp_23.setToolTipText("Click to know its details");
        comp_23.setBorder(null);
        comp_23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_23ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_23);
        comp_23.setBounds(140, 360, 130, 90);

        comp_24.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_24.setForeground(new java.awt.Color(255, 255, 255));
        comp_24.setText("comp_24");
        comp_24.setToolTipText("Click to know its details");
        comp_24.setBorder(null);
        comp_24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_24ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_24);
        comp_24.setBounds(270, 360, 140, 90);

        comp_25.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_25.setForeground(new java.awt.Color(255, 255, 255));
        comp_25.setText("comp_25");
        comp_25.setToolTipText("Click to know its details");
        comp_25.setBorder(null);
        comp_25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_25ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_25);
        comp_25.setBounds(410, 360, 140, 90);

        comp_26.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_26.setForeground(new java.awt.Color(255, 255, 255));
        comp_26.setText("comp_26");
        comp_26.setToolTipText("Click to know its details");
        comp_26.setBorder(null);
        comp_26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_26ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_26);
        comp_26.setBounds(550, 360, 140, 90);

        comp_27.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_27.setForeground(new java.awt.Color(255, 255, 255));
        comp_27.setText("comp_27");
        comp_27.setToolTipText("Click to know its details");
        comp_27.setBorder(null);
        comp_27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_27ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_27);
        comp_27.setBounds(690, 360, 140, 90);

        comp_28.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_28.setForeground(new java.awt.Color(255, 255, 255));
        comp_28.setText("comp_28");
        comp_28.setToolTipText("Click to know its details");
        comp_28.setBorder(null);
        comp_28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_28ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_28);
        comp_28.setBounds(830, 360, 140, 90);

        comp_29.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_29.setForeground(new java.awt.Color(255, 255, 255));
        comp_29.setText("comp_29");
        comp_29.setToolTipText("Click to know its details");
        comp_29.setBorder(null);
        comp_29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_29ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_29);
        comp_29.setBounds(10, 470, 140, 90);

        comp_30.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_30.setForeground(new java.awt.Color(255, 255, 255));
        comp_30.setText("comp_30");
        comp_30.setToolTipText("Click to know its details");
        comp_30.setBorder(null);
        comp_30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_30ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_30);
        comp_30.setBounds(150, 470, 130, 90);

        comp_31.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_31.setForeground(new java.awt.Color(255, 255, 255));
        comp_31.setText("comp_31");
        comp_31.setToolTipText("Click to know its details");
        comp_31.setBorder(null);
        comp_31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_31ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_31);
        comp_31.setBounds(280, 470, 130, 90);

        comp_34.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_34.setForeground(new java.awt.Color(255, 255, 255));
        comp_34.setText("comp_34");
        comp_34.setToolTipText("Click to know its details");
        comp_34.setBorder(null);
        comp_34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_34ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_34);
        comp_34.setBounds(690, 470, 140, 90);

        comp_33.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_33.setForeground(new java.awt.Color(255, 255, 255));
        comp_33.setText("comp_33");
        comp_33.setToolTipText("Click to know its details");
        comp_33.setBorder(null);
        comp_33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_33ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_33);
        comp_33.setBounds(550, 470, 140, 90);

        comp_35.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_35.setForeground(new java.awt.Color(255, 255, 255));
        comp_35.setText("comp_35");
        comp_35.setToolTipText("Click to know its details");
        comp_35.setBorder(null);
        comp_35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_35ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_35);
        comp_35.setBounds(830, 470, 140, 90);

        comp_32.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_32.setForeground(new java.awt.Color(255, 255, 255));
        comp_32.setText("comp_32");
        comp_32.setToolTipText("Click to know its details");
        comp_32.setBorder(null);
        comp_32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_32ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_32);
        comp_32.setBounds(410, 470, 140, 90);

        comp_36.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_36.setForeground(new java.awt.Color(255, 255, 255));
        comp_36.setText("comp_36");
        comp_36.setToolTipText("Click to know its details");
        comp_36.setBorder(null);
        comp_36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_36ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_36);
        comp_36.setBounds(10, 580, 140, 90);

        comp_5.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_5.setForeground(new java.awt.Color(255, 255, 255));
        comp_5.setText("comp_5");
        comp_5.setToolTipText("Click to know its details");
        comp_5.setBorder(null);
        comp_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_5ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_5);
        comp_5.setBounds(550, 30, 140, 90);

        comp_2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_2.setForeground(new java.awt.Color(255, 255, 255));
        comp_2.setText("comp_2");
        comp_2.setToolTipText("Click to know its details");
        comp_2.setBorder(null);
        comp_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_2ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_2);
        comp_2.setBounds(140, 30, 130, 90);

        comp_4.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_4.setForeground(new java.awt.Color(255, 255, 255));
        comp_4.setText("comp_4");
        comp_4.setToolTipText("Click to know its details");
        comp_4.setBorder(null);
        comp_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_4ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_4);
        comp_4.setBounds(410, 30, 140, 90);

        comp_7.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_7.setForeground(new java.awt.Color(255, 255, 255));
        comp_7.setText("comp_7");
        comp_7.setToolTipText("Click to know its details");
        comp_7.setBorder(null);
        comp_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_7ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_7);
        comp_7.setBounds(830, 30, 140, 90);

        comp_6.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_6.setForeground(new java.awt.Color(255, 255, 255));
        comp_6.setText("comp_6");
        comp_6.setToolTipText("Click to know its details");
        comp_6.setBorder(null);
        comp_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_6ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_6);
        comp_6.setBounds(690, 30, 140, 90);

        comp_10.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_10.setForeground(new java.awt.Color(255, 255, 255));
        comp_10.setText("comp_10");
        comp_10.setToolTipText("Click to know its details");
        comp_10.setBorder(null);
        comp_10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_10ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_10);
        comp_10.setBounds(270, 140, 140, 90);

        comp_8.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_8.setForeground(new java.awt.Color(255, 255, 255));
        comp_8.setText("comp_8");
        comp_8.setToolTipText("Click to know its details");
        comp_8.setBorder(null);
        comp_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_8ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_8);
        comp_8.setBounds(10, 140, 130, 90);

        comp_1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_1.setForeground(new java.awt.Color(255, 255, 255));
        comp_1.setText("comp_1");
        comp_1.setToolTipText("Click to know its details");
        comp_1.setBorder(null);
        comp_1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comp_1FocusGained(evt);
            }
        });
        comp_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                comp_1MouseEntered(evt);
            }
        });
        comp_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_1ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_1);
        comp_1.setBounds(10, 30, 130, 90);

        comp_9.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_9.setForeground(new java.awt.Color(255, 255, 255));
        comp_9.setText("comp_9");
        comp_9.setToolTipText("Click to know its details");
        comp_9.setBorder(null);
        comp_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_9ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_9);
        comp_9.setBounds(140, 140, 130, 90);

        comp_3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 15)); // NOI18N
        comp_3.setForeground(new java.awt.Color(255, 255, 255));
        comp_3.setText("comp_3");
        comp_3.setToolTipText("Click to know its details");
        comp_3.setBorder(null);
        comp_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_3ActionPerformed(evt);
            }
        });
        getContentPane().add(comp_3);
        comp_3.setBounds(270, 30, 140, 90);

        logout_btn.setBackground(new java.awt.Color(0, 0, 0));
        logout_btn.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        logout_btn.setForeground(new java.awt.Color(255, 255, 255));
        logout_btn.setText("Logout");
        logout_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_btnActionPerformed(evt);
            }
        });
        getContentPane().add(logout_btn);
        logout_btn.setBounds(1030, 680, 310, 30);

        end_session_btn.setBackground(new java.awt.Color(0, 0, 0));
        end_session_btn.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        end_session_btn.setForeground(new java.awt.Color(255, 255, 255));
        end_session_btn.setText("End Session");
        end_session_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                end_session_btnActionPerformed(evt);
            }
        });
        getContentPane().add(end_session_btn);
        end_session_btn.setBounds(1030, 640, 310, 30);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(null);

        Status_lb.setBackground(new java.awt.Color(0, 255, 255));
        Status_lb.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        Status_lb.setForeground(new java.awt.Color(51, 51, 51));
        Status_lb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Status_lb.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        Status_lb.setOpaque(true);
        jPanel1.add(Status_lb);
        Status_lb.setBounds(20, 50, 260, 40);

        Allocated_to_lb.setBackground(new java.awt.Color(0, 255, 255));
        Allocated_to_lb.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        Allocated_to_lb.setForeground(new java.awt.Color(51, 51, 51));
        Allocated_to_lb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Allocated_to_lb.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        Allocated_to_lb.setOpaque(true);
        jPanel1.add(Allocated_to_lb);
        Allocated_to_lb.setBounds(20, 150, 260, 80);

        jLabel2.setBackground(new java.awt.Color(0, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Details");
        jLabel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLabel2.setOpaque(true);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 10, 260, 30);

        cb2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        cb2.setText("Keyboard ACER OM-130006AK");
        cb2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cb2StateChanged(evt);
            }
        });
        cb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb2ActionPerformed(evt);
            }
        });
        jPanel1.add(cb2);
        cb2.setBounds(20, 270, 250, 21);

        cb3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        cb3.setText("Monitor ACER-58E510");
        cb3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cb3StateChanged(evt);
            }
        });
        jPanel1.add(cb3);
        cb3.setBounds(20, 300, 230, 21);

        cb4.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        cb4.setText("CPU ACER-123546.");
        cb4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cb4StateChanged(evt);
            }
        });
        jPanel1.add(cb4);
        cb4.setBounds(20, 330, 220, 21);

        cb6.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        cb6.setText("Softwares WINDOWS10");
        cb6.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cb6StateChanged(evt);
            }
        });
        jPanel1.add(cb6);
        cb6.setBounds(20, 390, 250, 21);

        cb5.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        cb5.setText("Switches working properly.");
        cb5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cb5StateChanged(evt);
            }
        });
        jPanel1.add(cb5);
        cb5.setBounds(20, 360, 240, 21);

        cb1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        cb1.setText("Mouse SM-9221");
        cb1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cb1StateChanged(evt);
            }
        });
        cb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb1ActionPerformed(evt);
            }
        });
        cb1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cb1PropertyChange(evt);
            }
        });
        jPanel1.add(cb1);
        cb1.setBounds(20, 240, 220, 21);

        Edit_Btn.setBackground(new java.awt.Color(0, 0, 0));
        Edit_Btn.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        Edit_Btn.setForeground(new java.awt.Color(255, 255, 255));
        Edit_Btn.setText("Edit");
        Edit_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edit_BtnActionPerformed(evt);
            }
        });
        jPanel1.add(Edit_Btn);
        Edit_Btn.setBounds(190, 420, 110, 30);

        Update_Btn.setBackground(new java.awt.Color(0, 0, 0));
        Update_Btn.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        Update_Btn.setForeground(new java.awt.Color(255, 255, 255));
        Update_Btn.setText("Update");
        Update_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_BtnActionPerformed(evt);
            }
        });
        jPanel1.add(Update_Btn);
        Update_Btn.setBounds(20, 420, 110, 30);

        comp_name_lb.setBackground(new java.awt.Color(0, 255, 255));
        comp_name_lb.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        comp_name_lb.setForeground(new java.awt.Color(51, 51, 51));
        comp_name_lb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        comp_name_lb.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        comp_name_lb.setOpaque(true);
        comp_name_lb.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                comp_name_lbAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jPanel1.add(comp_name_lb);
        comp_name_lb.setBounds(20, 100, 260, 40);

        jButton1.setText("Click Here to Allocate ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(1020, 590, 310, 80);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(1020, 50, 320, 460);

        Activate_comp_btn.setBackground(new java.awt.Color(0, 0, 204));
        Activate_comp_btn.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 20)); // NOI18N
        Activate_comp_btn.setForeground(new java.awt.Color(255, 255, 255));
        Activate_comp_btn.setText("Activate Computers");
        Activate_comp_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Activate_comp_btnActionPerformed(evt);
            }
        });
        getContentPane().add(Activate_comp_btn);
        Activate_comp_btn.setBounds(280, 680, 570, 40);

        Allocate_computers_Btn.setBackground(new java.awt.Color(0, 0, 0));
        Allocate_computers_Btn.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        Allocate_computers_Btn.setForeground(new java.awt.Color(255, 255, 255));
        Allocate_computers_Btn.setText("Allocate Computers");
        Allocate_computers_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Allocate_computers_BtnActionPerformed(evt);
            }
        });
        getContentPane().add(Allocate_computers_Btn);
        Allocate_computers_Btn.setBounds(1030, 520, 310, 30);

        gen_rep_btn.setBackground(new java.awt.Color(0, 0, 0));
        gen_rep_btn.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        gen_rep_btn.setForeground(new java.awt.Color(255, 255, 255));
        gen_rep_btn.setText("Generate Report");
        gen_rep_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gen_rep_btnActionPerformed(evt);
            }
        });
        getContentPane().add(gen_rep_btn);
        gen_rep_btn.setBounds(1030, 600, 310, 30);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1510, 800);

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comp_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_1ActionPerformed
        btname(comp_1);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_1ActionPerformed

    private void comp_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_2ActionPerformed
        btname(comp_2);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_2ActionPerformed

    private void comp_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_3ActionPerformed
        btname(comp_3);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_3ActionPerformed

    private void comp_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_4ActionPerformed
        btname(comp_4);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_4ActionPerformed

    private void comp_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_5ActionPerformed
        btname(comp_5);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_5ActionPerformed

    private void comp_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_6ActionPerformed
        btname(comp_6);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_6ActionPerformed

    private void comp_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_7ActionPerformed
        btname(comp_7);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_7ActionPerformed

    private void comp_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_8ActionPerformed
        btname(comp_8);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_8ActionPerformed

    private void comp_9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_9ActionPerformed
        btname(comp_9);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_9ActionPerformed

    private void comp_10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_10ActionPerformed
        btname(comp_10);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_10ActionPerformed

    private void comp_11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_11ActionPerformed
        btname(comp_11);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_11ActionPerformed

    private void comp_12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_12ActionPerformed
        btname(comp_12);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_12ActionPerformed

    private void comp_13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_13ActionPerformed
        btname(comp_13);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_13ActionPerformed

    private void comp_14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_14ActionPerformed
        btname(comp_14);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_14ActionPerformed

    private void comp_15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_15ActionPerformed
        btname(comp_15);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_15ActionPerformed

    private void comp_16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_16ActionPerformed
        btname(comp_16);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_16ActionPerformed

    private void comp_17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_17ActionPerformed
        btname(comp_17);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_17ActionPerformed

    private void comp_18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_18ActionPerformed
        btname(comp_18);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_18ActionPerformed

    private void comp_19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_19ActionPerformed
        btname(comp_19);
        btn_details();
        comp_Status();

    }//GEN-LAST:event_comp_19ActionPerformed

    private void comp_20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_20ActionPerformed
        btname(comp_20);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_20ActionPerformed

    private void comp_21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_21ActionPerformed
        btname(comp_21);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_21ActionPerformed

    private void comp_22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_22ActionPerformed
        btname(comp_22);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_22ActionPerformed

    private void comp_23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_23ActionPerformed
        btname(comp_23);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_23ActionPerformed

    private void comp_24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_24ActionPerformed
        btname(comp_24);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_24ActionPerformed

    private void comp_25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_25ActionPerformed
        btname(comp_25);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_25ActionPerformed

    private void comp_26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_26ActionPerformed
        btname(comp_26);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_26ActionPerformed

    private void comp_27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_27ActionPerformed
        btname(comp_27);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_27ActionPerformed

    private void comp_28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_28ActionPerformed
        btname(comp_28);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_28ActionPerformed

    private void comp_29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_29ActionPerformed
        btname(comp_29);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_29ActionPerformed

    private void comp_30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_30ActionPerformed
        btname(comp_30);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_30ActionPerformed

    private void comp_31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_31ActionPerformed
        btname(comp_31);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_31ActionPerformed

    private void comp_32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_32ActionPerformed
        btname(comp_32);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_32ActionPerformed

    private void comp_33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_33ActionPerformed
        btname(comp_33);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_33ActionPerformed

    private void comp_34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_34ActionPerformed
        btname(comp_34);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_34ActionPerformed

    private void comp_35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_35ActionPerformed
        btname(comp_35);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_35ActionPerformed

    private void comp_36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp_36ActionPerformed
        btname(comp_36);
        btn_details();
        comp_Status();
    }//GEN-LAST:event_comp_36ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        String ty[] = {comp_1.getText(), comp_2.getText(), comp_3.getText(), comp_4.getText(),
            comp_5.getText(), comp_6.getText(), comp_7.getText(), comp_8.getText(),
            comp_9.getText(), comp_10.getText(), comp_11.getText(), comp_12.getText(),
            comp_13.getText(), comp_14.getText(), comp_15.getText(), comp_16.getText(),
            comp_17.getText(), comp_18.getText(), comp_19.getText(), comp_20.getText(),
            comp_21.getText(), comp_22.getText(), comp_23.getText(), comp_24.getText(),
            comp_25.getText(), comp_26.getText(), comp_27.getText(), comp_28.getText(),
            comp_29.getText(), comp_30.getText(), comp_31.getText(), comp_32.getText(),
            comp_33.getText(), comp_34.getText(), comp_35.getText(), comp_36.getText(),};
        JButton[] btns = {comp_1, comp_2, comp_3, comp_4, comp_5, comp_6, comp_7, comp_8, comp_9, comp_10, comp_11, comp_12, comp_13, comp_14, comp_15, comp_16,
            comp_17, comp_18, comp_19, comp_20, comp_21, comp_22, comp_23, comp_24, comp_25, comp_26, comp_27, comp_28, comp_29, comp_30, comp_31, comp_32, comp_33, comp_34,
            comp_35, comp_36};
        openf("image.jpg");
        cb1.setEnabled(false);
        cb2.setEnabled(false);
        cb3.setEnabled(false);
        cb4.setEnabled(false);
        cb5.setEnabled(false);
        cb6.setEnabled(false);
        int i = 0;
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/lab_management", "root", "");
            Statement tem = cn.createStatement();
            String qu = "select Comp_name from temp;";
            ResultSet rs = tem.executeQuery(qu);
            while (rs.next()) {
                String cpnm = rs.getString(1);
                while (i < ty.length) {
                    if (ty[i].equals(cpnm)) {
                        btns[i].setBackground(Color.green);
                    }
                    ++i;
                }
                i = 0;
            }
            SetRed();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        Edit_Btn.setVisible(false);
        Update_Btn.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void comp_1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comp_1MouseEntered

    }//GEN-LAST:event_comp_1MouseEntered

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        Edit_Btn.setVisible(false);
        Update_Btn.setVisible(false);
        comp_name_lb.setText("");
        Allocated_to_lb.setText("");
        Status_lb.setText("");
        cb2.setEnabled(false);
        cb3.setEnabled(false);
        cb4.setEnabled(false);
        cb5.setEnabled(false);
        cb6.setEnabled(false);
        cb1.setEnabled(false);
        cb1.setForeground(Color.red);
        cb2.setForeground(Color.red);
        cb3.setForeground(Color.red);
        cb4.setForeground(Color.red);
        cb5.setForeground(Color.red);
        cb6.setForeground(Color.red);
        cb1.setSelected(false);
        cb2.setSelected(false);
        cb3.setSelected(false);
        cb4.setSelected(false);
        cb5.setSelected(false);
        cb6.setSelected(false);
    }//GEN-LAST:event_formMouseClicked

    private void Update_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_BtnActionPerformed
        String comp_nm = comp_name_lb.getText();
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lab_management", "root", "");
            Statement ts = con.createStatement();
            Statement stmt = con.createStatement();
            String c1, c2, c3, c4, c5, c6;
            if (cb1.isSelected() == true) {
                c1 = "OK";
            } else {
                c1 = "NOT WORKING";
            }
            if (cb2.isSelected() == true) {
                c2 = "OK";
            } else {
                c2 = "NOT WORKING";
            }
            if (cb3.isSelected() == true) {
                c3 = "OK";
            } else {
                c3 = "NOT WORKING";
            }
            if (cb4.isSelected() == true) {
                c4 = "OK";
            } else {
                c4 = "NOT WORKING";
            }
            if (cb5.isSelected() == true) {
                c5 = "OK";
            } else {
                c5 = "NOT WORKING";
            }
            if (cb6.isSelected() == true) {
                c6 = "OK";
            } else {
                c6 = "NOT WORKING";
            }
            String qry = "update available_computers set Mouse = '" + c1 + "' , Keyboard = '" + c2 + "' , Monitor = '" + c3 + "' , CPU = '" + c4 + "' , Switch = '" + c5 + "' , Software = '" + c6 + "' where Computer = '" + comp_nm + "';";
            stmt.executeUpdate(qry);
            cb1.setEnabled(false);
            cb2.setEnabled(false);
            cb3.setEnabled(false);
            cb4.setEnabled(false);
            cb5.setEnabled(false);
            cb6.setEnabled(false);
            Update_Btn.setVisible(false);
            Edit_Btn.setVisible(false);
            JOptionPane.showMessageDialog(null, "Changes will occur the next time when computers are allocated.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_Update_BtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        del_and_report();
    }//GEN-LAST:event_formWindowClosing

    private void Edit_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edit_BtnActionPerformed
        cb1.setEnabled(true);
        cb2.setEnabled(true);
        cb3.setEnabled(true);
        cb4.setEnabled(true);
        cb5.setEnabled(true);
        cb6.setEnabled(true);
        Update_Btn.setVisible(true);
    }//GEN-LAST:event_Edit_BtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lab_management", "root", "");
            Statement stwd = con.createStatement();
            String qrys = "select * from temp;";
            String qry = "delete from temp;";
            ResultSet ds = stwd.executeQuery(qrys);
            if (ds.next()) {
                int ws = JOptionPane.showConfirmDialog(this, "Computer are already allocated. Do you want to reallocate!! ", "Message", JOptionPane.YES_NO_OPTION);
                if (ws == JOptionPane.YES_OPTION) {
                    ds.first();
                    while (ds.next()) {
                        stwd.executeUpdate("insert into stu_report values(" + ds.getInt(5) + ",'" + ds.getString(6) + "','" + ds.getInt(1) + "','" + ds.getString(2) + "','" + ds.getString(3) + "',sysdate());");
                        computer_Allocation fg = new computer_Allocation();
                        fg.setVisible(true);
                        this.dispose();
                        stwd.executeUpdate(qry);
                    }
                }
            }
        } catch (Exception ae) {
            JOptionPane.showMessageDialog(null, ae.getMessage());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void Activate_comp_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Activate_comp_btnActionPerformed
        Activate_comp_btn.setText("Please wait..while activating Computers");
        try {
            //ON  ka
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lab_management", "root", "");
            Statement tchk = con.createStatement();
            String qchk = "select * from temp;";
            ResultSet rchk = tchk.executeQuery(qchk);
            Statement cchk = con.createStatement();
            ResultSet fd = cchk.executeQuery("select * from computer_allocation;");
            if (fd.next()) {
                if (rchk.next()) {
                    JOptionPane.showMessageDialog(null, "Computers are already allocated.", "Error", JOptionPane.ERROR_MESSAGE);
                } else {

                    JOptionPane.showMessageDialog(null, "This may Take a while...Please wait!!!");
                    String ty[] = {comp_1.getText(), comp_2.getText(), comp_3.getText(), comp_4.getText(),
                        comp_5.getText(), comp_6.getText(), comp_7.getText(), comp_8.getText(),
                        comp_9.getText(), comp_10.getText(), comp_11.getText(), comp_12.getText(),
                        comp_13.getText(), comp_14.getText(), comp_15.getText(), comp_16.getText(),
                        comp_17.getText(), comp_18.getText(), comp_19.getText(), comp_20.getText(),
                        comp_21.getText(), comp_22.getText(), comp_23.getText(), comp_24.getText(),
                        comp_25.getText(), comp_26.getText(), comp_27.getText(), comp_28.getText(),
                        comp_29.getText(), comp_30.getText(), comp_31.getText(), comp_32.getText(),
                        comp_33.getText(), comp_34.getText(), comp_35.getText(), comp_36.getText(),};
                    JButton[] btns = {comp_1, comp_2, comp_3, comp_4, comp_5, comp_6, comp_7, comp_8, comp_9, comp_10, comp_11, comp_12, comp_13, comp_14, comp_15, comp_16,
                        comp_17, comp_18, comp_19, comp_20, comp_21, comp_22, comp_23, comp_24, comp_25, comp_26, comp_27, comp_28, comp_29, comp_30, comp_31, comp_32, comp_33, comp_34,
                        comp_35, comp_36};
                    try {
                        Statement st = con.createStatement();
                        Statement stqt = con.createStatement();
                        Statement stmt = con.createStatement();
                        String qry = "select count(*) from computer_allocation;";
                        String qh = "select * from computer_allocation;";
                        String query = "select * from available_computers where Mouse = 'OK' and Keyboard = 'OK' and CPU = 'OK' and Monitor = 'OK' and Switch = 'OK' and Software = 'OK' ;";
                        String qury = "select count(*) from available_computers where Mouse = 'OK' and Keyboard = 'OK' and CPU = 'OK' and Monitor = 'OK' and Switch = 'OK' and Software = 'OK' ;";
                        ResultSet rs = st.executeQuery(qry);
                        rs.next();
                        int a = rs.getInt(1);
                        ResultSet qs = stqt.executeQuery(qury);
                        qs.next();
                        int i = qs.getInt(1);
                        ResultSet qp = stmt.executeQuery(query);
                        qp.next();
                        Statement so = con.createStatement();
                        ResultSet ro = so.executeQuery(qh);
                        int j = 0;
                        if (a <= i) {
                            while (ro.next()) {
                                String CClass = ro.getString(1);
                                String ssection = ro.getString(2);
                                String rnr = ro.getString(3);
                                String namm = ro.getString(4);
                                String dob = ro.getString(6);
                                String comp_nam = qp.getString(1);
                                String qtemp = "insert into temp values(" + rnr + ",'" + namm + "','" + comp_nam + "','" + dob + "'," + CClass + ",'" + ssection + "')";
                                String dtemp = "delete from computer_allocation where Name ='" + namm + "' and Rollno = " + rnr + " and DOB = '" + dob + "';";
                                st.executeUpdate(qtemp);
                                st.executeUpdate(dtemp);
                                qp.next();
                            }
                        } else if (a > i) {
                            Statement su = con.createStatement();
                            ResultSet ql = su.executeQuery(query);
                            Statement sp = con.createStatement();
                            ResultSet rp = sp.executeQuery(qh);
                            rp.next();
                            while (ql.next()) {
                                String CClass = rp.getString(1);
                                String ssection = rp.getString(2);
                                String rnr = rp.getString(3);
                                String namm = rp.getString(4);
                                String dob = rp.getString(6);
                                String comp_nam = ql.getString(1);
                                String qtemp = "insert into temp values(" + rnr + ",'" + namm + "','" + comp_nam + "','" + dob + "'," + CClass + ",'" + ssection + "');";
                                String dtemp = "delete from computer_allocation where Name ='" + namm + "' and Rollno = " + rnr + " and DOB = '" + dob + "';";
                                st.executeUpdate(qtemp);
                                st.executeUpdate(dtemp);
                                rp.next();
                            }
                            Statement sto = con.createStatement();
                            ResultSet ots = sto.executeQuery(qh);
                            if (ots.next()) {
                                Statement g = con.createStatement();
                                ResultSet gt = g.executeQuery(qh);
                                Statement h = con.createStatement();
                                ResultSet ht = h.executeQuery(query);
                                gt.next();
                                while (ht.next()) {
                                    String CClass = gt.getString(1);
                                    String ssection = gt.getString(2);
                                    String call = ht.getString(1);
                                    String r = gt.getString(3);
                                    String n = gt.getString(4);
                                    String doob = gt.getString(6);
                                    String fin = "insert into temp values(" + r + ",'" + n + "','" + call + "','" + doob + "'," + CClass + ",'" + ssection + "')";
                                    String dtemp = "delete from computer_allocation where Name ='" + n + "' and Rollno = " + r + " and DOB = '" + doob + "';";
                                    st.executeUpdate(fin);
                                    st.executeUpdate(dtemp);
                                    gt.next();
                                }
                            }
                            int yo = 0;
                            Statement stop = con.createStatement();
                            ResultSet pots = stop.executeQuery(qh);
                            if (pots.next()) {
                                pots.beforeFirst();
                                while (pots.next()) {
                                    ++yo;
                                }
                                stop.executeUpdate("delete from computer_allocation");
                                JOptionPane.showMessageDialog(null, "No computers left for " + yo + " Students", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        try {
                            Statement tem = con.createStatement();
                            String qu = "select * from temp;";
                            ResultSet tempget = tem.executeQuery(qu);
                            int f = 0;
                            while (tempget.next()) {
                                String nget = tempget.getString(3);
                                while (f < ty.length) {
                                    if (ty[f].equals(nget)) {
                                        btns[f].setBackground(Color.green);
                                    }
                                    ++f;
                                }
                                f = 0;
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e.getMessage());
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Computers are not Allocated. Please Allocate them first.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        Activate_comp_btn.setText("Activate computers");
    }//GEN-LAST:event_Activate_comp_btnActionPerformed

    private void Allocate_computers_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Allocate_computers_BtnActionPerformed
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lab_management", "root", "");
            Statement stmt = con.createStatement();
            Statement st = con.createStatement();
            ResultSet Rs = stmt.executeQuery("select count(*) from temp; ");
            Rs.next();
            int rs = Rs.getInt(1);
            if (rs != 0) {
                int nm = JOptionPane.showConfirmDialog(null, "Computers are already allocated. Click yes to end this session and Reallocate Computers. ", "Alert", JOptionPane.YES_NO_OPTION);
                if (nm == JOptionPane.YES_OPTION) {
                    int mn = JOptionPane.showConfirmDialog(null, "Do you want to save the details of this session.", "Confirmation", JOptionPane.YES_NO_OPTION);
                    if (mn == JOptionPane.YES_OPTION) {
                        report_only();
                        st.executeUpdate("delete from computer_allocation;");
                        computer_Allocation info = new computer_Allocation();
                        info.setVisible(true);
                        this.dispose();
                    } else {
                        st.executeUpdate("delete from temp;");
                        st.executeUpdate("delete from computer_allocation;");
                        computer_Allocation info = new computer_Allocation();
                        info.setVisible(true);
                        this.dispose();
                    }
                }
            } else if (rs == 0) {
                st.executeUpdate("delete from computer_allocation;");
                computer_Allocation info = new computer_Allocation();
                info.setVisible(true);
                this.dispose();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }//GEN-LAST:event_Allocate_computers_BtnActionPerformed

    private void cb1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cb1PropertyChange
        if (cb1.isSelected()) {
            cb1.setBackground(Color.green);
        } else {
            cb1.setBackground(Color.red);
        }
    }//GEN-LAST:event_cb1PropertyChange

    private void cb1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cb1StateChanged
        cbStateChange(cb1);
    }//GEN-LAST:event_cb1StateChanged

    private void cb2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cb2StateChanged
        cbStateChange(cb2);
    }//GEN-LAST:event_cb2StateChanged

    private void cb3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cb3StateChanged
        cbStateChange(cb3);
    }//GEN-LAST:event_cb3StateChanged

    private void cb4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cb4StateChanged
        cbStateChange(cb4);
    }//GEN-LAST:event_cb4StateChanged

    private void cb5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cb5StateChanged
        cbStateChange(cb5);
    }//GEN-LAST:event_cb5StateChanged

    private void cb6StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cb6StateChanged
        cbStateChange(cb6);
    }//GEN-LAST:event_cb6StateChanged

    private void add_class_stu_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_class_stu_btnActionPerformed
        add_class_student abc = new add_class_student();
        abc.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_add_class_stu_btnActionPerformed

    private void gen_rep_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gen_rep_btnActionPerformed
        report_Generation rg = new report_Generation();
        rg.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_gen_rep_btnActionPerformed

    private void end_session_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_end_session_btnActionPerformed
        end_session_btn.setText("Please wait...");
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/lab_management", "root", "");
            Statement d = cn.createStatement();
            String send = "select * from temp";
            ResultSet b = d.executeQuery(send);
            if (b.next()) {
                report_only();
                disableSystem();
            } else {
                JOptionPane.showMessageDialog(null, "No Computers Allocated");
            }
        } catch (Exception ed) {
            JOptionPane.showMessageDialog(null, ed.getMessage());
        }
        end_session_btn.setText("End Session");
    }//GEN-LAST:event_end_session_btnActionPerformed

    private void logout_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_btnActionPerformed
        del_and_report();
        Login_page i = new Login_page();
        i.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logout_btnActionPerformed

    private void Change_Acc_passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_Acc_passActionPerformed
        JPasswordField i = new JPasswordField();
        JPasswordField j = new JPasswordField();
        Object[] yo = {"Enter Current Password:-", i, "Enter New Password:-", j};
        int c = JOptionPane.showConfirmDialog(null, yo, "Enter Details", JOptionPane.YES_NO_OPTION);
        String cur_pass = i.getText();
        String new_pass = j.getText();
        if (cur_pass.trim().isEmpty() || new_pass.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Complete details not entered.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (new_pass.trim().length() < 5) {
            JOptionPane.showMessageDialog(null, "New Password too Short.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (new_pass.trim().length() > 14) {
            JOptionPane.showMessageDialog(null, "New Password too Long.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            if (c == JOptionPane.YES_OPTION) {
                try {
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lab_management", "root", "");
                    Statement st = con.createStatement();
                    ResultSet rt = st.executeQuery("select Password from login_info;");
                    rt.next();
                    String cur_p = rt.getString(1);
                    Statement stm = con.createStatement();
                    ResultSet rtm = stm.executeQuery("select Security_word from login_info;");
                    rtm.next();
                    String sec_word = rtm.getString(1);
                    if (cur_p.equals(cur_pass)) {
                        String sec_get = JOptionPane.showInputDialog(null, "Enter Your Security Word:-");
                        if (sec_get.equals(sec_word)) {
                            st.executeUpdate("Update login_info set Password = '" + new_pass + "';");
                            st.executeUpdate("Update admin_id set Password = '" + new_pass + "' where Security_word = '" + sec_word + "' and Password = '" + cur_pass + "';");
                            JOptionPane.showMessageDialog(null, "Password Changed.");
                        } else {
                            JOptionPane.showMessageDialog(null, "Incorrect Security word.", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Current Password is Incorrect. If you have forgotten your Password logout and click on forgot password.");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "An Error Occured.Please Retry.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Password not Changed.");
            }
        }
    }//GEN-LAST:event_Change_Acc_passActionPerformed

    private void cb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb1ActionPerformed

    private void cb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb2ActionPerformed

    private void comp_1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comp_1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_comp_1FocusGained

    private void comp_name_lbAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_comp_name_lbAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_comp_name_lbAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Allocated_computers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Allocated_computers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Allocated_computers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Allocated_computers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Allocated_computers().setVisible(true);
            }
        });
    }

    private void btname(JButton btn) {
        String bt = btn.getText();
        comp_name_lb.setText(bt);
        Edit_Btn.setVisible(true);
    }

    private void disableSystem() {
        JButton[] btnss = {comp_1, comp_2, comp_3, comp_4, comp_5, comp_6, comp_7, comp_8, comp_9, comp_10, comp_11, comp_12, comp_13, comp_14, comp_15, comp_16,
            comp_17, comp_18, comp_19, comp_20, comp_21, comp_22, comp_23, comp_24, comp_25, comp_26, comp_27, comp_28, comp_29, comp_30, comp_31, comp_32, comp_33, comp_34,
            comp_35, comp_36};
        int s = 0;
        while (s < btnss.length) {
            btnss[s].setBackground(Color.red);
            ++s;
        }
    }

    private void SetRed() {
        JButton[] btnss = {comp_1, comp_2, comp_3, comp_4, comp_5, comp_6, comp_7, comp_8, comp_9, comp_10, comp_11, comp_12, comp_13, comp_14, comp_15, comp_16,
            comp_17, comp_18, comp_19, comp_20, comp_21, comp_22, comp_23, comp_24, comp_25, comp_26, comp_27, comp_28, comp_29, comp_30, comp_31, comp_32, comp_33, comp_34,
            comp_35, comp_36};
        int t = 0;
        while (t < btnss.length) {
            if (btnss[t].getBackground() != Color.green) {
                btnss[t].setBackground(Color.red);
            }
            ++t;
        }
    }

    private void btn_details() {
        String str = comp_name_lb.getText();
        Allocated_to_lb.setText("");
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lab_management", "root", "");
            Statement stmt = con.createStatement();
            Statement st = con.createStatement();
            String qr = "select * from available_computers where Computer ='" + str + "';";
            ResultSet res = st.executeQuery(qr);
            res.next();
            String m = res.getString(2);
            String k = res.getString(3);
            String mon = res.getString(4);
            String cp = res.getString(5);
            String swi = res.getString(6);
            String soft = res.getString(7);
            if (m.equals("OK")) {
                cb1.setSelected(true);
            } else if (m.equals("NOT WORKING")) {
                cb1.setSelected(false);
            }
            if (k.equals("OK")) {
                cb2.setSelected(true);
            } else if (k.equals("NOT WORKING")) {
                cb2.setSelected(false);
            }
            if (mon.equals("OK")) {
                cb3.setSelected(true);
            } else if (mon.equals("NOT WORKING")) {
                cb3.setSelected(false);
            }
            if (cp.equals("OK")) {
                cb4.setSelected(true);
            } else if (cp.equals("NOT WORKING")) {
                cb4.setSelected(false);
            }
            if (swi.equals("OK")) {
                cb5.setSelected(true);
            } else if (swi.equals("NOT WORKING")) {
                cb5.setSelected(false);
            }
            if (soft.equals("OK")) {
                cb6.setSelected(true);
            } else if (soft.equals("NOT WORKING")) {
                cb6.setSelected(false);
            }

            String get_Alo = "select * from temp where comp_name = '" + str + "';";
            Statement gh = con.createStatement();
            ResultSet rf = gh.executeQuery(get_Alo);
            while (rf.next()) {
                int roll = rf.getInt(1);
                String nam = rf.getString(2);
                String already = Allocated_to_lb.getText();
                Allocated_to_lb.setText("<html>" + already + "<br>" + roll + " )" + nam + "");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    private void comp_Status() {
        cb1.setEnabled(false);
        cb2.setEnabled(false);
        cb3.setEnabled(false);
        cb4.setEnabled(false);
        cb5.setEnabled(false);
        cb6.setEnabled(false);
        String ty[] = {comp_1.getText(), comp_2.getText(), comp_3.getText(), comp_4.getText(),
            comp_5.getText(), comp_6.getText(), comp_7.getText(), comp_8.getText(),
            comp_9.getText(), comp_10.getText(), comp_11.getText(), comp_12.getText(),
            comp_13.getText(), comp_14.getText(), comp_15.getText(), comp_16.getText(),
            comp_17.getText(), comp_18.getText(), comp_19.getText(), comp_20.getText(),
            comp_21.getText(), comp_22.getText(), comp_23.getText(), comp_24.getText(),
            comp_25.getText(), comp_26.getText(), comp_27.getText(), comp_28.getText(),
            comp_29.getText(), comp_30.getText(), comp_31.getText(), comp_32.getText(),
            comp_33.getText(), comp_34.getText(), comp_35.getText(), comp_36.getText(),};

        JButton[] btnss = {comp_1, comp_2, comp_3, comp_4, comp_5, comp_6, comp_7, comp_8, comp_9, comp_10, comp_11, comp_12, comp_13, comp_14, comp_15, comp_16,
            comp_17, comp_18, comp_19, comp_20, comp_21, comp_22, comp_23, comp_24, comp_25, comp_26, comp_27, comp_28, comp_29, comp_30, comp_31, comp_32, comp_33, comp_34,
            comp_35, comp_36};

        String match = comp_name_lb.getText();
        int i = 0;
        while (i < ty.length) {
            if (match.equals(ty[i])) {
                if (btnss[i].getBackground() == Color.green) {
                    Status_lb.setText("Status :- Allocated");
                } else if (btnss[i].getBackground() == Color.red) {
                    Status_lb.setText("Status :- Unallocated");
                }
                break;
            }
            ++i;
        }
    }

    private void del_and_report() {
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/lab_management", "root", "");
            Statement d = cn.createStatement();
            String send = "select * from temp";
            ResultSet b = d.executeQuery(send);
            Statement de = cn.createStatement();
            Statement ed = cn.createStatement();
            ResultSet rs = ed.executeQuery("select Name from login_info");
            rs.next();
            String usr = rs.getString(1);
            if (b.next()) {
                b.beforeFirst();
                while (b.next()) {
                    int rno = b.getInt(1);
                    String nm = b.getString(2);
                    String cname = b.getString(3);
                    int clss = b.getInt(5);
                    String sn = b.getString(6);
                    String exec = "insert into stu_report values(" + clss + ",'" + sn + "'," + rno + ",'" + nm + "','" + cname + "',sysdate(),'" + usr + "');";
                    de.executeUpdate(exec);
                }
                String del = "delete from temp;";
                String log_del = "delete from login_info;";
                de.executeUpdate(del);
                de.executeUpdate(log_del);
            } else {
                String log_del = "delete from login_info;";
                de.executeUpdate(log_del);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }

    private void cbStateChange(JCheckBox cb) {
        if (cb.isSelected() == true) {
            cb.setForeground(Color.green);
        } else {
            cb.setForeground(Color.red);
        }
    }

    private void openf(String a) {
        Toolkit t = Toolkit.getDefaultToolkit();
        Dimension dmnsn = t.getScreenSize();
        int w = dmnsn.width;
        int h = dmnsn.height;
        this.setSize(dmnsn);
        jLabel1.setSize(w, h);
        ImageIcon img = new ImageIcon(getClass().getResource(a));
        Image im = img.getImage();
        Image fin = im.getScaledInstance(w, h, Image.SCALE_DEFAULT);
        ImageIcon background_img = new ImageIcon(fin);
        jLabel1.setIcon(background_img);
    }

    private void report_only() {

        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/lab_management", "root", "");
            Statement d = cn.createStatement();
            String send = "select * from temp";
            ResultSet b = d.executeQuery(send);
            Statement de = cn.createStatement();
            Statement ed = cn.createStatement();
            ResultSet rs = ed.executeQuery("select Name from login_info");
            rs.next();
            String usr = rs.getString(1);
            if (b.next()) {
                b.beforeFirst();
                while (b.next()) {
                    int rno = b.getInt(1);
                    String nm = b.getString(2);
                    String cname = b.getString(3);
                    int clss = b.getInt(5);
                    String sn = b.getString(6);
                    String exec = "insert into stu_report values(" + clss + ",'" + sn + "'," + rno + ",'" + nm + "','" + cname + "',sysdate(),'" + usr + "');";
                    de.executeUpdate(exec);
                }
                String del = "delete from temp;";
                de.executeUpdate(del);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Activate_comp_btn;
    private javax.swing.JButton Allocate_computers_Btn;
    private javax.swing.JLabel Allocated_to_lb;
    private javax.swing.JButton Change_Acc_pass;
    private javax.swing.JButton Edit_Btn;
    private javax.swing.JLabel Status_lb;
    private javax.swing.JButton Update_Btn;
    private javax.swing.JButton add_class_stu_btn;
    private javax.swing.JCheckBox cb1;
    private javax.swing.JCheckBox cb2;
    private javax.swing.JCheckBox cb3;
    private javax.swing.JCheckBox cb4;
    private javax.swing.JCheckBox cb5;
    private javax.swing.JCheckBox cb6;
    private javax.swing.JButton comp_1;
    private javax.swing.JButton comp_10;
    private javax.swing.JButton comp_11;
    private javax.swing.JButton comp_12;
    private javax.swing.JButton comp_13;
    private javax.swing.JButton comp_14;
    private javax.swing.JButton comp_15;
    private javax.swing.JButton comp_16;
    private javax.swing.JButton comp_17;
    private javax.swing.JButton comp_18;
    private javax.swing.JButton comp_19;
    private javax.swing.JButton comp_2;
    private javax.swing.JButton comp_20;
    private javax.swing.JButton comp_21;
    private javax.swing.JButton comp_22;
    private javax.swing.JButton comp_23;
    private javax.swing.JButton comp_24;
    private javax.swing.JButton comp_25;
    private javax.swing.JButton comp_26;
    private javax.swing.JButton comp_27;
    private javax.swing.JButton comp_28;
    private javax.swing.JButton comp_29;
    private javax.swing.JButton comp_3;
    private javax.swing.JButton comp_30;
    private javax.swing.JButton comp_31;
    private javax.swing.JButton comp_32;
    private javax.swing.JButton comp_33;
    private javax.swing.JButton comp_34;
    private javax.swing.JButton comp_35;
    private javax.swing.JButton comp_36;
    private javax.swing.JButton comp_4;
    private javax.swing.JButton comp_5;
    private javax.swing.JButton comp_6;
    private javax.swing.JButton comp_7;
    private javax.swing.JButton comp_8;
    private javax.swing.JButton comp_9;
    private javax.swing.JLabel comp_name_lb;
    private javax.swing.JButton end_session_btn;
    private javax.swing.JButton gen_rep_btn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton logout_btn;
    // End of variables declaration//GEN-END:variables
}
